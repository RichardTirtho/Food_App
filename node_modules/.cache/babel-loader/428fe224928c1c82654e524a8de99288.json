{"ast":null,"code":"var _jsxFileName = \"I:\\\\REACT\\\\React code\\\\Food_Order\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./CartContext\";\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartDefaultState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"Add\") {\n    const updatedTotalamount = state.totalAmount + action.item.price * action.item.amount;\n    const existingIndexitem = state.items.findIndex(item => item.id === action.item.id);\n    const exsitingItem = state.items[existingIndexitem];\n    let updatedItem;\n    let up;\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalamount\n    };\n  }\n\n  return cartDefaultState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, cartDispatch] = useReducer(cartReducer, cartDefaultState);\n\n  const addItemtoCart = item => {\n    cartDispatch({\n      type: \"Add\",\n      item: item\n    });\n  };\n\n  const delItemtoCart = id => {\n    cartDispatch({\n      type: \"Remove\",\n      id: id\n    });\n  };\n\n  const cartContex = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemtoCart,\n    removeItem: delItemtoCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContex,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"wmf4EmzzBpLorSLdG2EyUnX7krM=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["I:/REACT/React code/Food_Order/src/Store/CartProvider.js"],"names":["CartContext","React","useReducer","cartDefaultState","items","totalAmount","cartReducer","state","action","type","updatedTotalamount","item","price","amount","existingIndexitem","findIndex","id","exsitingItem","updatedItem","up","updatedItems","concat","CartProvider","props","cartState","cartDispatch","addItemtoCart","delItemtoCart","cartContex","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADtD;AAGE,UAAMC,iBAAiB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CACzBJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADR,CAA1B;AAIF,UAAMC,YAAY,GAAGV,KAAK,CAACH,KAAN,CAAYU,iBAAZ,CAArB;AACA,QAAII,WAAJ;AACA,QAAIC,EAAJ;AACA,UAAMC,YAAY,GAAGb,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmBb,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACLP,MAAAA,KAAK,EAAEgB,YADF;AAELf,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAID;;AACD,SAAOP,gBAAP;AACD,CAnBD;;AAqBA,MAAMmB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAA5C;;AAEA,QAAMuB,aAAa,GAAIf,IAAD,IAAU;AAC9Bc,IAAAA,YAAY,CAAC;AAAEhB,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMgB,aAAa,GAAIX,EAAD,IAAQ;AAC5BS,IAAAA,YAAY,CAAC;AAAEhB,MAAAA,IAAI,EAAE,QAAR;AAAkBO,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMY,UAAU,GAAG;AACjBxB,IAAAA,KAAK,EAAEoB,SAAS,CAACpB,KADA;AAEjBC,IAAAA,WAAW,EAAEmB,SAAS,CAACnB,WAFN;AAGjBwB,IAAAA,OAAO,EAAEH,aAHQ;AAIjBI,IAAAA,UAAU,EAAEH;AAJK,GAAnB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,UAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMT,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./CartContext\";\r\nimport React, { useReducer } from \"react\";\r\n\r\nconst cartDefaultState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"Add\") {\r\n    const updatedTotalamount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    \r\n      const existingIndexitem = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    \r\n    const exsitingItem = state.items[existingIndexitem];\r\n    let updatedItem\r\n    let up\r\n    const updatedItems = state.items.concat(action.item);\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalamount,\r\n    };\r\n  }\r\n  return cartDefaultState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, cartDispatch] = useReducer(cartReducer, cartDefaultState);\r\n\r\n  const addItemtoCart = (item) => {\r\n    cartDispatch({ type: \"Add\", item: item });\r\n  };\r\n\r\n  const delItemtoCart = (id) => {\r\n    cartDispatch({ type: \"Remove\", id: id });\r\n  };\r\n\r\n  const cartContex = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemtoCart,\r\n    removeItem: delItemtoCart,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContex}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"I:/REACT/React code/Food_Order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"I:/REACT/React code/Food_Order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"I:/REACT/React code/Food_Order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import CartContext from\"./CartContext\";import React,{useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var cartDefaultState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){if(action.type===\"Add\"){var updatedTotalamount=state.totalAmount+action.item.price*action.item.amount;var existingIndexitem=state.items.findIndex(function(item){return item.id===action.item.id;});var exsitingItem=state.items[existingIndexitem];var updatedItems;if(exsitingItem){var updatedItem=_objectSpread(_objectSpread({},exsitingItem),{},{amount:exsitingItem.amount+action.item.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingIndexitem]=updatedItem;}else{updatedItems=state.items.concat(action.item);}return{items:updatedItems,totalAmount:updatedTotalamount};}if(action.type===\"Remove\"){var _existingIndexitem=state.items.findIndex(function(item){return item.id===action.id;});var _exsitingItem=state.items[_existingIndexitem];var _updatedTotalamount=state.totalAmount-_exsitingItem.price;var _updatedItems;if(_exsitingItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var _updatedItem=_objectSpread(_objectSpread({},_exsitingItem),{},{amount:_exsitingItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingIndexitem]=_updatedItem;}return{items:_updatedItems,totalAmount:_updatedTotalamount};}return cartDefaultState;};var CartProvider=function CartProvider(props){var _useReducer=useReducer(cartReducer,cartDefaultState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],cartDispatch=_useReducer2[1];var addItemtoCart=function addItemtoCart(item){cartDispatch({type:\"Add\",item:item});};var delItemtoCart=function delItemtoCart(id){cartDispatch({type:\"Remove\",id:id});};var cartContex={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemtoCart,removeItem:delItemtoCart};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContex,children:props.children});};export default CartProvider;","map":{"version":3,"sources":["I:/REACT/React code/Food_Order/src/Store/CartProvider.js"],"names":["CartContext","React","useReducer","cartDefaultState","items","totalAmount","cartReducer","state","action","type","updatedTotalamount","item","price","amount","existingIndexitem","findIndex","id","exsitingItem","updatedItems","updatedItem","concat","filter","CartProvider","props","cartState","cartDispatch","addItemtoCart","delItemtoCart","cartContex","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import CartContext from \"./CartContext\";\r\nimport React, { useReducer } from \"react\";\r\n\r\nconst cartDefaultState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"Add\") {\r\n    const updatedTotalamount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    \r\n      const existingIndexitem = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    \r\n    const exsitingItem = state.items[existingIndexitem];\r\n \r\n    let updatedItems;\r\n    if(exsitingItem){\r\n       const updatedItem ={\r\n        ...exsitingItem,\r\n        amount: exsitingItem.amount + action.item.amount\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingIndexitem] = updatedItem\r\n    }else{\r\n       updatedItems = state.items.concat(action.item);\r\n\r\n    }\r\n\r\n    \r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalamount,\r\n    };\r\n  }\r\n  if(action.type === \"Remove\"){\r\n    const existingIndexitem = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    \r\n    const exsitingItem = state.items[existingIndexitem];\r\n    const updatedTotalamount = state.totalAmount - exsitingItem.price;\r\n\r\n    let updatedItems;\r\n    if(exsitingItem.amount === 1){\r\n      updatedItems =state.items.filter(item => item.id !== action.id);\r\n    }else{\r\n      const updatedItem = {...exsitingItem, amount: exsitingItem.amount -1};\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingIndexitem] = updatedItem;\r\n\r\n    }\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalamount,\r\n    };\r\n\r\n  }\r\n  return cartDefaultState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, cartDispatch] = useReducer(cartReducer, cartDefaultState);\r\n\r\n  const addItemtoCart = (item) => {\r\n    cartDispatch({ type: \"Add\", item: item });\r\n  };\r\n\r\n  const delItemtoCart = (id) => {\r\n    cartDispatch({ type: \"Remove\", id: id });\r\n  };\r\n\r\n  const cartContex = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemtoCart,\r\n    removeItem: delItemtoCart,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContex}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}
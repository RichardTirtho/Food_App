{"ast":null,"code":"var _jsxFileName = \"I:\\\\REACT\\\\React code\\\\Food_Order\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./CartContext\";\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cartDefaultState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'Add') {\n    const updatedTotalamount = state.totalAmount + action.item.price * action.item.amount;\n    const existingIndexitem = state.items.findIndex(item => item.id === act);\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalamount\n    };\n  }\n\n  return cartDefaultState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, cartDispatch] = useReducer(cartReducer, cartDefaultState);\n\n  const addItemtoCart = item => {\n    cartDispatch({\n      type: \"Add\",\n      item: item\n    });\n  };\n\n  const delItemtoCart = id => {\n    cartDispatch({\n      type: \"Remove\",\n      id: id\n    });\n  };\n\n  const cartContex = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemtoCart,\n    removeItem: delItemtoCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContex,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"wmf4EmzzBpLorSLdG2EyUnX7krM=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["I:/REACT/React code/Food_Order/src/Store/CartProvider.js"],"names":["CartContext","React","useReducer","cartDefaultState","items","totalAmount","cartReducer","state","action","type","updatedTotalamount","item","price","amount","existingIndexitem","findIndex","id","act","updatedItems","concat","CartProvider","props","cartState","cartDispatch","addItemtoCart","delItemtoCart","cartContex","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;AAEC,MAAMC,gBAAgB,GAAG;AACxBC,EAAAA,KAAK,EAAG,EADgB;AAExBC,EAAAA,WAAW,EAAG;AAFU,CAAzB;;AAMD,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACpC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AAEvB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AACA,UAAMC,iBAAiB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYC,GAA1C,CAA1B;AACA,UAAMC,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmBX,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACLP,MAAAA,KAAK,EAAEc,YADF;AAELb,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAKD;;AACD,SAAOP,gBAAP;AAED,CAdD;;AAgBA,MAAMiB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BrB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAA5C;;AAEA,QAAMqB,aAAa,GAAIb,IAAD,IAAU;AAC9BY,IAAAA,YAAY,CAAC;AAACd,MAAAA,IAAI,EAAC,KAAN;AAAYE,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMc,aAAa,GAAIT,EAAD,IAAQ;AAC5BO,IAAAA,YAAY,CAAC;AAACd,MAAAA,IAAI,EAAC,QAAN;AAAeO,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMU,UAAU,GAAG;AACjBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADA;AAEjBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFN;AAGjBsB,IAAAA,OAAO,EAAEH,aAHQ;AAIjBI,IAAAA,UAAU,EAAEH;AAJK,GAAnB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,UAA7B;AAAA,cAA0CL,KAAK,CAACQ;AAAhD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnBD;;GAAMT,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./CartContext\";\r\nimport React, {useReducer} from \"react\";\r\n\r\n const cartDefaultState = {\r\n  items : [],\r\n  totalAmount : 0\r\n\r\n};\r\n\r\nconst cartReducer = (state,action) => {\r\n  if(action.type === 'Add'){\r\n    \r\n    const updatedTotalamount = state.totalAmount + action.item.price * action.item.amount;\r\n    const existingIndexitem = state.items.findIndex(item => item.id === act)\r\n    const updatedItems = state.items.concat(action.item);\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalamount\r\n\r\n    }\r\n  }\r\n  return cartDefaultState;\r\n\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, cartDispatch] = useReducer(cartReducer, cartDefaultState);\r\n  \r\n  const addItemtoCart = (item) => {\r\n    cartDispatch({type:\"Add\",item:item})\r\n  };\r\n  \r\n  const delItemtoCart = (id) => {\r\n    cartDispatch({type:\"Remove\",id:id})\r\n  };\r\n\r\n  const cartContex = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemtoCart,\r\n    removeItem: delItemtoCart,\r\n  };\r\n\r\n  return <CartContext.Provider value={cartContex}>{props.children}</CartContext.Provider>;\r\n};\r\n\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}